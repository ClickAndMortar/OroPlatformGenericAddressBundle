{% set addressListUrl = path('candm_api_get_class_entity_addresses', {'className': entity.className, 'addressesEntityId': entity.id}) %}
{% set addressCreateUrl = path('candm_address_create', {'className': entity.className, 'addressesEntityId': entity.id}) %}
{% set addressUpdateRoute = 'candm_address_update' %}
{% set addressDeleteRoute = 'candm_api_delete_class_entity_address' %}
{% set ownerParam = 'addressesEntityId' %}

{# Address book widget to use on view entity pages #}
<div class="widget-content">
    {# JS template for address view #}
    {% include "OroAddressBundle:Js:address.js.twig" %}

    {# widget container and actions #}
    <div class="widget-actions">
        {% if address_edit_acl_resource is not defined or resource_granted(address_edit_acl_resource) %}
            <button class="btn btn-mini btn-primary btn-uppercase" type="button" data-action-name="add_address">
                + {{ 'Add Address'|trans }}</button>
        {% endif %}
    </div>
    <div class="list-box map-box" id="address-book"></div>

    <script type="text/javascript">
        require(['jquery', 'underscore', 'routing', 'oroaddress/js/address-book', 'oroui/js/widget-manager'],
            function ($, _, routing, AddressBook, widgetManager) {
                widgetManager.getWidgetInstance({{ app.request.get('_wid')|json_encode|raw }}, function (widget) {
                    /** @type oroaddress.AddressBook */
                    var addressBook = new AddressBook({
                        el: '#address-book',
                        addressListUrl: {{ addressListUrl|json_encode|raw }},
                        addressCreateUrl: {{ addressCreateUrl|json_encode|raw }},
                        addressUpdateUrl: function () {
                            var address = arguments[0];
                            return routing.generate(
                                '{{ addressUpdateRoute }}',
                                {
                                    'className': {{ entity.className|json_encode|raw }},
                                    '{{ ownerParam }}': {{ entity.id|json_encode|raw }},
                                    'id': address.get('id')
                                }
                            )
                        },
                        addressDeleteUrl: function () {
                            var address = arguments[0];
                            return routing.generate(
                                '{{ addressDeleteRoute }}',
                                {
                                    'className': {{ entity.className|json_encode|raw }},
                                    '{{ ownerParam }}': {{ entity.id|json_encode|raw }},
                                    'addressId': address.get('id')
                                }
                            )
                        },
                        addressMapOptions: {
                            'mobilePhone': 'mobile_phone',
                        }
                    });
                    widget.getAction('add_address', 'adopted', function (action) {
                        action.on('click', _.bind(addressBook.createAddress, addressBook));
                    });
                    addressBook
                        .getCollection()
                        .reset({{ render(addressListUrl) }});
                });
            });
    </script>
</div>